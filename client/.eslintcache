[{"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\App.js":"1","C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\index.js":"2","C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\theme.js":"3","C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\Home.js":"4","C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\Menu.js":"5","C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\NavBar.js":"6","C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\Header.js":"7","C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\QuizzesList.js":"8","C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\QuizPage.js":"9"},{"size":791,"mtime":1607533470980,"results":"10","hashOfConfig":"11"},{"size":602,"mtime":1607371256337,"results":"12","hashOfConfig":"11"},{"size":707,"mtime":1607524492827,"results":"13","hashOfConfig":"11"},{"size":527,"mtime":1607537291355,"results":"14","hashOfConfig":"11"},{"size":1529,"mtime":1607375591242,"results":"15","hashOfConfig":"11"},{"size":725,"mtime":1607523355083,"results":"16","hashOfConfig":"11"},{"size":588,"mtime":1607523664317,"results":"17","hashOfConfig":"11"},{"size":2581,"mtime":1607537686677,"results":"18","hashOfConfig":"11"},{"size":2386,"mtime":1607551861727,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n4ek4o",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\App.js",[],"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\index.js",[],"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\theme.js",[],"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\Home.js",["39"],"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\Menu.js",[],"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\NavBar.js",["40"],"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\Header.js",[],"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\QuizzesList.js",[],"C:\\Users\\nirka\\Documents\\GitHub\\QuizMe\\client\\src\\components\\QuizPage.js",["41"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  quiz: {\r\n    fontWeight: '600',\r\n    fontSize: '1.5em'\r\n  },\r\n  field: {\r\n    cursor: 'pointer',\r\n    margin: '0.25em',\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: '5px'\r\n  }\r\n}));\r\n\r\nexport default function Home() {\r\n  const { id } = useParams();\r\n  const classes = useStyles();\r\n\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [quizIsOver, setQuizIsOver] = useState(false);\r\n  const [quiz, setQuiz] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      const quiz = (await axios.get(`/quizzes/${id}`)).data;\r\n      setQuiz(quiz);\r\n    };\r\n    fetchQuiz();\r\n  }, []);\r\n\r\n  const onAnswerSelect = (e) => {\r\n    const selectedAnswer = e.target.innerText;\r\n    const CurrentFieldsArray = quiz.Questions[currentQuestionIndex].Fields;\r\n    const selectedAnswerId = CurrentFieldsArray.find(\r\n      (field) => field.title === selectedAnswer\r\n    ).id;\r\n    setAnswers([\r\n      ...answers,\r\n      {\r\n        questionId: quiz.Questions[currentQuestionIndex].id,\r\n        answerId: selectedAnswerId,\r\n      },\r\n    ]);\r\n    quiz.Questions.length - 1 > currentQuestionIndex\r\n      ? setCurrentQuestionIndex(currentQuestionIndex + 1)\r\n      : submitQuiz();\r\n  };\r\n  const submitQuiz = () => {\r\n    console.log(answers);\r\n    setQuizIsOver(true);\r\n  };\r\n\r\n  if (quiz) {\r\n    if (!quizIsOver) {\r\n      return (\r\n        <>\r\n          <Container className={classes.quiz}>\r\n            <div>{quiz.Questions[currentQuestionIndex].title}</div>\r\n            <ul>\r\n              {quiz.Questions[currentQuestionIndex].Fields.map(\r\n                (field, index) => (\r\n                  <li key={index} onClick={onAnswerSelect} className={classes.field}>\r\n                    {field.title}\r\n                  </li>\r\n                )\r\n              )}\r\n            </ul>\r\n            {/* <button onClick={submitQuiz}>Submit</button> */}\r\n          </Container>\r\n        </>\r\n      );\r\n    } else {\r\n      return <div>Well Done! quiz submitted.</div>;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n",{"ruleId":"42","severity":1,"message":"43","line":14,"column":9,"nodeType":"44","messageId":"45","endLine":14,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":12,"column":9,"nodeType":"44","messageId":"45","endLine":12,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":34,"column":6,"nodeType":"48","endLine":34,"endColumn":8,"suggestions":"49"},"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["50"],{"desc":"51","fix":"52"},"Update the dependencies array to be: [id]",{"range":"53","text":"54"},[974,976],"[id]"]